{"ast":null,"code":"import _slicedToArray from \"/Users/user/Desktop/Lambda/Replate-React/replate-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Desktop/Lambda/Replate-React/replate-react/src/Components/BusinessCreateAccount.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nconst BusOnboardForm = ({\n  values,\n  errors,\n  status,\n  validateForm\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        business = _useState2[0],\n        setBusiness = _useState2[1]; //sets\n\n\n  useEffect(() => {\n    if (status) {\n      setBusiness([...business, status]);\n    }\n  }, [business]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Create Business Account\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Business Name\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), errors.name && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, errors.name)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Contact Name\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), errors.contactName && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, errors.contactName)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Street Address\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), errors.address && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, errors.lastName)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"phone\",\n    placeholder: \"xxx-xxx-xxxx\" //   validate={validatePhone}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), errors.phone && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, errors.phone)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), errors.email && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, errors.email)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), errors.password && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, errors.password)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Confirm Password\"), React.createElement(Field, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), errors.confirmPassword && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, errors.confirmPassword))), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: () => validateForm().then(() => console.log(\"blah\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nconst FormikBusOnboardForm = withFormik({\n  mapPropsToValues({\n    name,\n    contactName,\n    phone,\n    email,\n    password,\n    confirmPassword\n  }) {\n    return {\n      name: name || \"\",\n      contactName: contactName || \"\",\n      phone: phone || \"\",\n      email: email || \"\",\n      password: password || \"\",\n      confirmPassword: confirmPassword || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"*Required field\"),\n    contactName: Yup.string().required(\"*Required field\"),\n    phone: Yup.string().required(\"*Required field\"),\n    email: Yup.string().email(\"Invalid email\").required(\"*Required field\"),\n    password: Yup.string().required(\"*Required field\"),\n    confirmPassword: Yup.string().required(\"*Required field\")\n  }),\n\n  handleSubmit(values, {\n    setStatus\n  }) {\n    axios.post(\"https://reqres.in/api/users\", values).then(res => {\n      setStatus(res.data);\n      console.log(\"BusOnboardForm POST request success:\", res);\n    }).catch(err => console.log(err.res));\n  }\n\n})(BusOnboardForm);\nexport default FormikBusOnboardForm;","map":{"version":3,"sources":["/Users/user/Desktop/Lambda/Replate-React/replate-react/src/Components/BusinessCreateAccount.js"],"names":["React","useState","useEffect","withFormik","Form","Field","Yup","axios","BusOnboardForm","values","errors","status","validateForm","business","setBusiness","name","contactName","address","lastName","phone","email","password","confirmPassword","then","console","log","FormikBusOnboardForm","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","setStatus","post","res","data","catch","err"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nconst BusOnboardForm = ({ values, errors, status, validateForm }) => {\n  const [business, setBusiness] = useState([]);\n\n  //sets\n  useEffect(() => {\n    if (status) {\n      setBusiness([...business, status]);\n    }\n  }, [business]);\n\n  return (\n    <div>\n      <Form>\n        <h2>Create Business Account</h2>\n        <div>\n          <div>\n            <label>Business Name</label>\n            <Field type=\"text\" name=\"name\" />\n            {errors.name && <p className=\"errors\">{errors.name}</p>}\n          </div>\n          <div>\n            <label>Contact Name</label>\n            <Field type=\"text\" name=\"name\" />\n            {errors.contactName && <p className=\"errors\">{errors.contactName}</p>}\n          </div>\n          <div>\n            <label>Street Address</label>\n            <Field type=\"text\" name=\"address\" />\n            {errors.address && <p className=\"errors\">{errors.lastName}</p>}\n          </div>\n          <div>\n            <label>Phone</label>\n            <Field\n              type=\"text\"\n              name=\"phone\"\n              placeholder=\"xxx-xxx-xxxx\"\n            //   validate={validatePhone}\n            />\n            {errors.phone && <p className=\"errors\">{errors.phone}</p>}\n          </div>\n          <div>\n            <label>Email</label>\n            <Field type=\"email\" name=\"email\" />\n            {errors.email && <p className=\"errors\">{errors.email}</p>}\n          </div>\n          <div>\n            <label>Password</label>\n            <Field type=\"password\" name=\"password\" />\n            {errors.password && <p className=\"errors\">{errors.password}</p>}\n          </div>\n          <div>\n            <label>Confirm Password</label>\n            <Field type=\"password\" name=\"confirmPassword\" />\n            {errors.confirmPassword && (\n              <p className=\"errors\">{errors.confirmPassword}</p>\n            )}\n          </div>\n        </div>\n        <button\n          type=\"submit\"\n          onClick={() => validateForm().then(() => console.log(\"blah\"))}\n        >\n          Submit\n        </button>\n      </Form>\n    </div>\n  );\n};\n\nconst FormikBusOnboardForm = withFormik({\n  mapPropsToValues({\n    name,\n    contactName,\n    phone,\n    email,\n    password,\n    confirmPassword\n  }) {\n    return {\n      name: name || \"\",\n      contactName: contactName || \"\",\n      phone: phone || \"\",\n      email: email || \"\",\n      password: password || \"\",\n      confirmPassword: confirmPassword || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"*Required field\"),\n    contactName: Yup.string().required(\"*Required field\"),\n    phone: Yup.string().required(\"*Required field\"),\n    email: Yup.string()\n      .email(\"Invalid email\")\n      .required(\"*Required field\"),\n    password: Yup.string().required(\"*Required field\"),\n    confirmPassword: Yup.string().required(\"*Required field\")\n  }),\n\n  handleSubmit(values, { setStatus }) {\n    axios\n      .post(\"https://reqres.in/api/users\", values)\n      .then(res => {\n        setStatus(res.data);\n        console.log(\"BusOnboardForm POST request success:\", res);\n      })\n      .catch(err => console.log(err.res));\n  }\n})(BusOnboardForm);\n\nexport default FormikBusOnboardForm;\n"]},"metadata":{},"sourceType":"module"}