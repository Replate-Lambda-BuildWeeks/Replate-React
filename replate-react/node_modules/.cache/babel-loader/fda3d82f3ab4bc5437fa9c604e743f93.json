{"ast":null,"code":"import _slicedToArray from \"/Users/user/Desktop/Lambda/Replate-React/replate-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Desktop/Lambda/Replate-React/replate-react/src/Components/VolunteerCreateAccount.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nconst VolOnboardForm = ({\n  values,\n  errors,\n  touched,\n  status\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        volunteer = _useState2[0],\n        setVolunteer = _useState2[1];\n\n  useEffect(() => {\n    if (status) {\n      setVolunteer([...volunteer, status]);\n    }\n  }, [status, volunteer]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Create Your Volunteer Account\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })));\n};\n\nconst FormikVolOnboardForm = withFormik({\n  mapPropsToValues({\n    firstName\n  }) {\n    return {\n      firstName: firstName || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().required(\"First Name required\")\n  }),\n\n  handleSubmit(values, {\n    setStatus\n  }) {\n    axios.post(\"https://reqres.in/api/users\", values).then(res => {\n      setStatus(res.data);\n      console.log(\"VolOnboardForm POST request success:\", res);\n    }).catch(err => console.log(err.res));\n  }\n\n})(VolOnboardForm);\nexport default FormikVolOnboardForm;","map":{"version":3,"sources":["/Users/user/Desktop/Lambda/Replate-React/replate-react/src/Components/VolunteerCreateAccount.js"],"names":["React","useState","useEffect","withFormik","Form","Field","Yup","axios","VolOnboardForm","values","errors","touched","status","volunteer","setVolunteer","FormikVolOnboardForm","mapPropsToValues","firstName","validationSchema","object","shape","string","required","handleSubmit","setStatus","post","then","res","data","console","log","catch","err"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,QAAwC,QAAxC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAD,KAAyC;AAAA,oBAC1BX,QAAQ,CAAC,EAAD,CADkB;AAAA;AAAA,QACrDY,SADqD;AAAA,QAC1CC,YAD0C;;AAG5DZ,EAAAA,SAAS,CAAC,MAAM;AAChB,QAAIU,MAAJ,EAAY;AACRE,MAAAA,YAAY,CAAE,CAAC,GAAGD,SAAJ,EAAeD,MAAf,CAAF,CAAZ;AACH;AACA,GAJQ,EAIN,CAACA,MAAD,EAASC,SAAT,CAJM,CAAT;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAQH,CAjBD;;AAmBA,MAAME,oBAAoB,GAAGZ,UAAU,CAAC;AACpCa,EAAAA,gBAAgB,CAAE;AAAEC,IAAAA;AAAF,GAAF,EAAgB;AAC5B,WAAM;AACFA,MAAAA,SAAS,EAAEA,SAAS,IAAI;AADtB,KAAN;AAGH,GALmC;;AAOpCC,EAAAA,gBAAgB,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,KAAb,CAAmB;AACjCH,IAAAA,SAAS,EAAEX,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB;AADsB,GAAnB,CAPkB;;AAWpCC,EAAAA,YAAY,CAACd,MAAD,EAAS;AAACe,IAAAA;AAAD,GAAT,EAAqB;AAC7BjB,IAAAA,KAAK,CAACkB,IAAN,CAAW,6BAAX,EAA0ChB,MAA1C,EACCiB,IADD,CACMC,GAAG,IAAI;AACTH,MAAAA,SAAS,CAACG,GAAG,CAACC,IAAL,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDH,GAApD;AACH,KAJD,EAKCI,KALD,CAKOC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACL,GAAhB,CALd;AAMH;;AAlBmC,CAAD,CAAV,CAmB1BnB,cAnB0B,CAA7B;AAqBA,eAAeO,oBAAf","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nconst VolOnboardForm = ({ values, errors, touched, status }) => {\n    const [volunteer, setVolunteer] = useState([]);\n\n    useEffect(() => {\n    if (status) {\n        setVolunteer ([...volunteer, status]);\n    }\n    }, [status, volunteer]);\n\n    return(\n        <div>\n            <Form>\n                <h1>Create Your Volunteer Account</h1>\n                <Field type=\"text\" name=\"firstName\"/>\n            </Form>\n        </div>\n    )\n};\n\nconst FormikVolOnboardForm = withFormik({\n    mapPropsToValues ({ firstName }){\n        return{\n            firstName: firstName || \"\"\n        }\n    },\n\n    validationSchema: Yup.object().shape({\n        firstName: Yup.string().required(\"First Name required\")\n    }),\n\n    handleSubmit(values, {setStatus}){\n        axios.post(\"https://reqres.in/api/users\", values)\n        .then(res => {\n            setStatus(res.data);\n            console.log(\"VolOnboardForm POST request success:\", res);\n        })\n        .catch(err => console.log(err.res));\n    }\n})(VolOnboardForm);\n\nexport default FormikVolOnboardForm;\n"]},"metadata":{},"sourceType":"module"}