{"ast":null,"code":"import _slicedToArray from \"/Users/user/Desktop/Lambda/Replate-React/replate-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Desktop/Lambda/Replate-React/replate-react/src/Components/VolunteerCreateAccount.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nconst VolOnboardForm = ({\n  values,\n  errors,\n  status,\n  validateForm\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        volunteer = _useState2[0],\n        setVolunteer = _useState2[1];\n\n  useEffect(() => {\n    if (status) {\n      setVolunteer([...volunteer, status]);\n    }\n  }, [volunteer]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Create Volunteer Account\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"First Name\", React.createElement(Field, {\n    type: \"text\",\n    name: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), errors.firstName && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, errors.firstName), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Last Name\", React.createElement(Field, {\n    type: \"text\",\n    name: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), errors.lastName && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, errors.lastName)), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Phone\", React.createElement(Field, {\n    type: \"text\",\n    name: \"phone\",\n    placeholder: \"xxx-xxx-xxxx\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Email\", React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Password\", React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Confirm Password\", React.createElement(Field, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: () => validateForm().then(() => console.log('blah')),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nconst FormikVolOnboardForm = withFormik({\n  mapPropsToValues({\n    firstName,\n    lastName,\n    phone,\n    email,\n    password,\n    confirmPassword\n  }) {\n    return {\n      firstName: firstName || \"\",\n      lastName: lastName || \"\",\n      phone: phone || \"\",\n      email: email || \"\",\n      password: password || \"\",\n      confirmPassword: confirmPassword || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().required(\"*Required field\"),\n    lastName: Yup.string().required(\"*Required field\"),\n    phone: Yup.string().required(\"*Required field\"),\n    email: Yup.string().email(\"Invalid email\").required(\"*Required field\"),\n    password: Yup.string().required(\"*Required field\"),\n    confirmPassword: Yup.string().required(\"*Required field\")\n  }),\n\n  handleSubmit(values, {\n    setStatus\n  }) {\n    axios.post(\"https://reqres.in/api/users\", values).then(res => {\n      setStatus(res.data);\n      console.log(\"VolOnboardForm POST request success:\", res);\n    }).catch(err => console.log(err.res));\n  }\n\n})(VolOnboardForm);\nexport default FormikVolOnboardForm;","map":{"version":3,"sources":["/Users/user/Desktop/Lambda/Replate-React/replate-react/src/Components/VolunteerCreateAccount.js"],"names":["React","useState","useEffect","withFormik","Form","Field","Yup","axios","VolOnboardForm","values","errors","status","validateForm","volunteer","setVolunteer","firstName","lastName","then","console","log","FormikVolOnboardForm","mapPropsToValues","phone","email","password","confirmPassword","validationSchema","object","shape","string","required","handleSubmit","setStatus","post","res","data","catch","err"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nconst VolOnboardForm = ({ values, errors, status, validateForm  }) => {\n  const [volunteer, setVolunteer] = useState([]);\n\n  useEffect(() => {\n    if (status) {\n      setVolunteer([...volunteer, status]);\n    }\n  }, [volunteer]);\n\n  return (\n    <div>\n      <Form>\n        <h2>Create Volunteer Account</h2>\n        <div></div>\n        <label>\n          First Name\n          <Field type=\"text\" name=\"firstName\" />\n        </label>\n        {errors.firstName && <p className=\"errors\">{errors.firstName}</p>}\n        <label>\n          Last Name\n          <Field type=\"text\" name=\"lastName\" />\n        {errors.lastName && <p>{errors.lastName}</p>}\n        </label>\n        <label>\n          Phone\n          <Field type=\"text\" name=\"phone\" placeholder=\"xxx-xxx-xxxx\"/>\n        </label>\n        <label>\n          Email\n          <Field type=\"email\" name=\"email\" />\n        </label>\n        <label>\n          Password\n          <Field type=\"password\" name=\"password\" />\n        </label>\n        <label>\n          Confirm Password\n          <Field type=\"password\" name=\"confirmPassword\" />\n        </label>\n        <button type=\"submit\" onClick={() => validateForm().then(() => console.log('blah'))}>Submit</button>\n      </Form>\n    </div>\n  );\n};\n\nconst FormikVolOnboardForm = withFormik({\n  mapPropsToValues({ firstName, lastName, phone, email, password, confirmPassword }) {\n    return {\n      firstName: firstName || \"\",\n      lastName: lastName || \"\",\n      phone: phone || \"\",\n      email: email || \"\",\n      password: password || \"\",\n      confirmPassword: confirmPassword || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().required(\"*Required field\"),\n    lastName: Yup.string().required(\"*Required field\"),\n      phone: Yup.string().required(\"*Required field\"),\n      email: Yup.string().email(\"Invalid email\").required(\"*Required field\"),\n      password: Yup.string().required(\"*Required field\"),\n      confirmPassword: Yup.string().required(\"*Required field\")\n  }),\n\n  handleSubmit(values, { setStatus }) {\n    axios\n      .post(\"https://reqres.in/api/users\", values)\n      .then(res => {\n        setStatus(res.data);\n        console.log(\"VolOnboardForm POST request success:\", res);\n      })\n      .catch(err => console.log(err.res));\n  }\n})(VolOnboardForm);\n\nexport default FormikVolOnboardForm;\n"]},"metadata":{},"sourceType":"module"}