{"ast":null,"code":"import _slicedToArray from \"/Users/user/Desktop/Lambda/Replate-React/replate-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Desktop/Lambda/Replate-React/replate-react/src/Components/VolunteerCreateAccount.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nconst VolOnboardForm = ({\n  values,\n  errors,\n  touched,\n  status\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        volunteer = _useState2[0],\n        setVolunteer = _useState2[1];\n\n  useEffect(() => {\n    if (status) {\n      setVolunteer([...volunteer, status]);\n    }\n  }, [status, volunteer]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Create Volunteer Account\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"First Name\", React.createElement(Field, {\n    type: \"text\",\n    name: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Last Name\", React.createElement(Field, {\n    type: \"text\",\n    name: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Phone\", React.createElement(Field, {\n    type: \"text\",\n    name: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))));\n};\n\nconst FormikVolOnboardForm = withFormik({\n  mapPropsToValues({\n    firstName\n  }) {\n    return {\n      firstName: firstName || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().required(\"First Name required\")\n  }),\n\n  handleSubmit(values, {\n    setStatus\n  }) {\n    axios.post(\"https://reqres.in/api/users\", values).then(res => {\n      setStatus(res.data);\n      console.log(\"VolOnboardForm POST request success:\", res);\n    }).catch(err => console.log(err.res));\n  }\n\n})(VolOnboardForm);\nexport default FormikVolOnboardForm;","map":{"version":3,"sources":["/Users/user/Desktop/Lambda/Replate-React/replate-react/src/Components/VolunteerCreateAccount.js"],"names":["React","useState","useEffect","withFormik","Form","Field","Yup","axios","VolOnboardForm","values","errors","touched","status","volunteer","setVolunteer","FormikVolOnboardForm","mapPropsToValues","firstName","validationSchema","object","shape","string","required","handleSubmit","setStatus","post","then","res","data","console","log","catch","err"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,QAAwC,QAAxC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,MAAV;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAD,KAAyC;AAAA,oBAC5BX,QAAQ,CAAC,EAAD,CADoB;AAAA;AAAA,QACvDY,SADuD;AAAA,QAC5CC,YAD4C;;AAG9DZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,MAAJ,EAAY;AACVE,MAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeD,MAAf,CAAD,CAAZ;AACD;AACF,GAJQ,EAIN,CAACA,MAAD,EAASC,SAAT,CAJM,CAAT;AAMA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAVF,CADF,CADF;AAmBD,CA5BD;;AA8BA,MAAME,oBAAoB,GAAGZ,UAAU,CAAC;AACtCa,EAAAA,gBAAgB,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAgB;AAC9B,WAAO;AACLA,MAAAA,SAAS,EAAEA,SAAS,IAAI;AADnB,KAAP;AAGD,GALqC;;AAOtCC,EAAAA,gBAAgB,EAAEZ,GAAG,CAACa,MAAJ,GAAaC,KAAb,CAAmB;AACnCH,IAAAA,SAAS,EAAEX,GAAG,CAACe,MAAJ,GAAaC,QAAb,CAAsB,qBAAtB;AADwB,GAAnB,CAPoB;;AAWtCC,EAAAA,YAAY,CAACd,MAAD,EAAS;AAAEe,IAAAA;AAAF,GAAT,EAAwB;AAClCjB,IAAAA,KAAK,CACFkB,IADH,CACQ,6BADR,EACuChB,MADvC,EAEGiB,IAFH,CAEQC,GAAG,IAAI;AACXH,MAAAA,SAAS,CAACG,GAAG,CAACC,IAAL,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDH,GAApD;AACD,KALH,EAMGI,KANH,CAMSC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACL,GAAhB,CANhB;AAOD;;AAnBqC,CAAD,CAAV,CAoB1BnB,cApB0B,CAA7B;AAsBA,eAAeO,oBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nconst VolOnboardForm = ({ values, errors, touched, status }) => {\n  const [volunteer, setVolunteer] = useState([]);\n\n  useEffect(() => {\n    if (status) {\n      setVolunteer([...volunteer, status]);\n    }\n  }, [status, volunteer]);\n\n  return (\n    <div>\n      <Form>\n        <h2>Create Volunteer Account</h2>\n        <label>\n          First Name\n          <Field type=\"text\" name=\"firstName\" />\n        </label>\n        <label>\n          Last Name\n          <Field type=\"text\" name=\"lastName\" />\n        </label>\n        <label>\n          Phone \n          <Field type=\"text\" name=\"firstName\" />\n        </label>\n      </Form>\n    </div>\n  );\n};\n\nconst FormikVolOnboardForm = withFormik({\n  mapPropsToValues({ firstName }) {\n    return {\n      firstName: firstName || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().required(\"First Name required\")\n  }),\n\n  handleSubmit(values, { setStatus }) {\n    axios\n      .post(\"https://reqres.in/api/users\", values)\n      .then(res => {\n        setStatus(res.data);\n        console.log(\"VolOnboardForm POST request success:\", res);\n      })\n      .catch(err => console.log(err.res));\n  }\n})(VolOnboardForm);\n\nexport default FormikVolOnboardForm;\n"]},"metadata":{},"sourceType":"module"}