{"ast":null,"code":"import _slicedToArray from \"/Users/user/Desktop/Lambda/Replate-React/replate-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/user/Desktop/Lambda/Replate-React/replate-react/src/Components/VolunteerCreateAccount.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nfunction validatePhone(value) {\n  let error;\n\n  if (!value) {\n    error = \"Required field\";\n  } else if (!/^[2-9]\\d{2}-\\d{3}-\\d{4}$/i.test(value)) {\n    error = \"Enter phone in the following format: xxx-xxx-xxxx\";\n  }\n\n  return errror;\n}\n\nconst VolOnboardForm = ({\n  values,\n  errors,\n  status,\n  validateForm\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        volunteer = _useState2[0],\n        setVolunteer = _useState2[1]; //sets\n\n\n  useEffect(() => {\n    if (status) {\n      setVolunteer([...volunteer, status]);\n    }\n  }, [volunteer]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Create Volunteer Account\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), errors.firstName && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, errors.firstName)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), errors.lastName && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, errors.lastName)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(Field, {\n    type: \"text\",\n    name: \"phone\",\n    placeholder: \"xxx-xxx-xxxx\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), errors.phone && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, errors.phone)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Email\"), React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), errors.email && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, errors.email)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), errors.password && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, errors.password)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Confirm Password\"), React.createElement(Field, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), errors.confirmPassword && React.createElement(\"p\", {\n    className: \"errors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, errors.confirmPassword))), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: () => validateForm().then(() => console.log(\"blah\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nconst FormikVolOnboardForm = withFormik({\n  mapPropsToValues({\n    firstName,\n    lastName,\n    phone,\n    email,\n    password,\n    confirmPassword\n  }) {\n    return {\n      firstName: firstName || \"\",\n      lastName: lastName || \"\",\n      phone: phone || \"\",\n      email: email || \"\",\n      password: password || \"\",\n      confirmPassword: confirmPassword || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().required(\"*Required field\"),\n    lastName: Yup.string().required(\"*Required field\"),\n    phone: Yup.string().required(\"*Required field\"),\n    email: Yup.string().email(\"Invalid email\").required(\"*Required field\"),\n    password: Yup.string().required(\"*Required field\"),\n    confirmPassword: Yup.string().required(\"*Required field\")\n  }),\n\n  handleSubmit(values, {\n    setStatus\n  }) {\n    axios.post(\"https://reqres.in/api/users\", values).then(res => {\n      setStatus(res.data);\n      console.log(\"VolOnboardForm POST request success:\", res);\n    }).catch(err => console.log(err.res));\n  }\n\n})(VolOnboardForm);\nexport default FormikVolOnboardForm;","map":{"version":3,"sources":["/Users/user/Desktop/Lambda/Replate-React/replate-react/src/Components/VolunteerCreateAccount.js"],"names":["React","useState","useEffect","withFormik","Form","Field","Yup","axios","validatePhone","value","error","test","errror","VolOnboardForm","values","errors","status","validateForm","volunteer","setVolunteer","firstName","lastName","phone","email","password","confirmPassword","then","console","log","FormikVolOnboardForm","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","setStatus","post","res","data","catch","err"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withFormik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\n\nfunction validatePhone(value){\n    let error;\n    if(!value) {\n        error=\"Required field\";\n    } else if (!/^[2-9]\\d{2}-\\d{3}-\\d{4}$/i.test(value)) {\n        error=\"Enter phone in the following format: xxx-xxx-xxxx\";\n    }\n    return errror;\n}\n\nconst VolOnboardForm = ({ values, errors, status, validateForm }) => {\n  const [volunteer, setVolunteer] = useState([]);\n\n  //sets\n  useEffect(() => {\n    if (status) {\n      setVolunteer([...volunteer, status]);\n    }\n  }, [volunteer]);\n\n  return (\n    <div>\n      <Form>\n        <h2>Create Volunteer Account</h2>\n        <div>\n          <div>\n            <label>First Name</label>\n            <Field type=\"text\" name=\"firstName\" />\n            {errors.firstName && <p className=\"errors\">{errors.firstName}</p>}\n          </div>\n          <div>\n            <label>Last Name</label>\n            <Field type=\"text\" name=\"lastName\" />\n            {errors.lastName && <p className=\"errors\">{errors.lastName}</p>}\n          </div>\n          <div>\n            <label>Phone</label>\n            <Field type=\"text\" name=\"phone\" placeholder=\"xxx-xxx-xxxx\" />\n            {errors.phone && <p className=\"errors\">{errors.phone}</p>}\n          </div>\n          <div>\n            <label>\n              Email</label>\n              <Field type=\"email\" name=\"email\" />\n              {errors.email && <p className=\"errors\">{errors.email}</p>}\n          </div>\n          <div>\n            <label>\n              Password</label>\n              <Field type=\"password\" name=\"password\" />\n              {errors.password && <p className=\"errors\">{errors.password}</p>}\n          </div>\n          <div>\n            <label>\n              Confirm Password</label>\n              <Field type=\"password\" name=\"confirmPassword\" />\n              {errors.confirmPassword && <p className=\"errors\">{errors.confirmPassword}</p>}\n          </div>\n        </div>\n        <button\n          type=\"submit\"\n          onClick={() => validateForm().then(() => console.log(\"blah\"))}\n        >\n          Submit\n        </button>\n      </Form>\n    </div>\n  );\n};\n\nconst FormikVolOnboardForm = withFormik({\n  mapPropsToValues({\n    firstName,\n    lastName,\n    phone,\n    email,\n    password,\n    confirmPassword\n  }) {\n    return {\n      firstName: firstName || \"\",\n      lastName: lastName || \"\",\n      phone: phone || \"\",\n      email: email || \"\",\n      password: password || \"\",\n      confirmPassword: confirmPassword || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().required(\"*Required field\"),\n    lastName: Yup.string().required(\"*Required field\"),\n    phone: Yup.string().required(\"*Required field\"),\n    email: Yup.string()\n      .email(\"Invalid email\")\n      .required(\"*Required field\"),\n    password: Yup.string().required(\"*Required field\"),\n    confirmPassword: Yup.string().required(\"*Required field\")\n  }),\n\n  handleSubmit(values, { setStatus }) {\n    axios\n      .post(\"https://reqres.in/api/users\", values)\n      .then(res => {\n        setStatus(res.data);\n        console.log(\"VolOnboardForm POST request success:\", res);\n      })\n      .catch(err => console.log(err.res));\n  }\n})(VolOnboardForm);\n\nexport default FormikVolOnboardForm;\n"]},"metadata":{},"sourceType":"module"}